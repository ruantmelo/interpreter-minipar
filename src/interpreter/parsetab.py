
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BOOL CHANNEL COMMA DIGIT DIVIDE DOT ELSE EQUAL FALSE GE_THAN G_THAN ID IF INPUT INT LBRACE LE_THAN LPAREN L_THAN MINUS NOT_EQUAL OUTPUT PAR_BLOCK PLUS RBRACE RECEIVE RPAREN SEND SEQ_BLOCK STRING STRING_VALUE TIMES TRUE WHILEstmt_block : seq_stmts\n| par_stmts\n| stmt_block seq_stmts\n| stmt_block par_stmtsseq_stmts : SEQ_BLOCK stmtspar_stmts : PAR_BLOCK stmtsstmts : stmt\n| stmts stmtstmt : assignment\n| declaration\n| IF LPAREN condition RPAREN stmt\n| IF LPAREN condition RPAREN stmt ELSE stmt\n| WHILE LPAREN condition RPAREN stmt\n| LBRACE stmts RBRACE\n| func\nassignment : ID ASSIGN expr\n| ID ASSIGN funcdeclaration  : c_channel\n| b_declaration\n| s_declaration\n| i_declarationcondition  : condition LE_THAN expr\n| condition GE_THAN expr\n| condition L_THAN expr\n| condition G_THAN expr\n| condition EQUAL expr\n| condition NOT_EQUAL expr\n| exprfunc : INPUT LPAREN RPAREN\n| OUTPUT LPAREN expr RPAREN\n| chanchan : ID DOT send_stmt\n| ID DOT receive_stmtsend_stmt : SEND LPAREN expr RPAREN\n| SEND LPAREN expr COMMA expr COMMA expr RPARENreceive_stmt : RECEIVE LPAREN ID RPAREN\n| RECEIVE LPAREN ID COMMA ID COMMA ID RPARENexpr : expr PLUS term\n| expr MINUS term\n| termterm : term TIMES factor\n| term DIVIDE factor\n| factorfactor : LPAREN expr RPAREN\n| DIGIT\n| ID\n| STRING_VALUE\n| bool_val\nbool_val : TRUE\n| FALSEempty : c_channel : CHANNEL ID LPAREN address COMMA address RPARENaddress  : ID\n| STRING_VALUEb_declaration : BOOL IDs_declaration : STRING IDi_declaration : INT ID'
    
_lr_action_items = {'SEQ_BLOCK':([0,1,2,3,6,7,8,9,10,11,15,17,18,19,20,23,28,29,38,39,40,44,45,46,47,48,49,50,51,53,54,55,56,57,58,61,79,83,84,91,92,93,94,95,100,102,105,108,113,114,],[4,4,-1,-2,-3,-4,-5,-7,-9,-10,-15,-18,-19,-20,-21,-31,-6,-8,-55,-56,-57,-40,-43,-45,-46,-47,-48,-49,-50,-14,-46,-16,-17,-32,-33,-29,-30,-44,-11,-38,-39,-41,-42,-13,-34,-36,-12,-52,-35,-37,]),'PAR_BLOCK':([0,1,2,3,6,7,8,9,10,11,15,17,18,19,20,23,28,29,38,39,40,44,45,46,47,48,49,50,51,53,54,55,56,57,58,61,79,83,84,91,92,93,94,95,100,102,105,108,113,114,],[5,5,-1,-2,-3,-4,-5,-7,-9,-10,-15,-18,-19,-20,-21,-31,-6,-8,-55,-56,-57,-40,-43,-45,-46,-47,-48,-49,-50,-14,-46,-16,-17,-32,-33,-29,-30,-44,-11,-38,-39,-41,-42,-13,-34,-36,-12,-52,-35,-37,]),'$end':([1,2,3,6,7,8,9,10,11,15,17,18,19,20,23,28,29,38,39,40,44,45,46,47,48,49,50,51,53,54,55,56,57,58,61,79,83,84,91,92,93,94,95,100,102,105,108,113,114,],[0,-1,-2,-3,-4,-5,-7,-9,-10,-15,-18,-19,-20,-21,-31,-6,-8,-55,-56,-57,-40,-43,-45,-46,-47,-48,-49,-50,-14,-46,-16,-17,-32,-33,-29,-30,-44,-11,-38,-39,-41,-42,-13,-34,-36,-12,-52,-35,-37,]),'IF':([4,5,8,9,10,11,14,15,17,18,19,20,23,28,29,32,38,39,40,44,45,46,47,48,49,50,51,53,54,55,56,57,58,61,65,76,79,83,84,91,92,93,94,95,99,100,102,105,108,113,114,],[12,12,12,-7,-9,-10,12,-15,-18,-19,-20,-21,-31,12,-8,12,-55,-56,-57,-40,-43,-45,-46,-47,-48,-49,-50,-14,-46,-16,-17,-32,-33,-29,12,12,-30,-44,-11,-38,-39,-41,-42,-13,12,-34,-36,-12,-52,-35,-37,]),'WHILE':([4,5,8,9,10,11,14,15,17,18,19,20,23,28,29,32,38,39,40,44,45,46,47,48,49,50,51,53,54,55,56,57,58,61,65,76,79,83,84,91,92,93,94,95,99,100,102,105,108,113,114,],[13,13,13,-7,-9,-10,13,-15,-18,-19,-20,-21,-31,13,-8,13,-55,-56,-57,-40,-43,-45,-46,-47,-48,-49,-50,-14,-46,-16,-17,-32,-33,-29,13,13,-30,-44,-11,-38,-39,-41,-42,-13,13,-34,-36,-12,-52,-35,-37,]),'LBRACE':([4,5,8,9,10,11,14,15,17,18,19,20,23,28,29,32,38,39,40,44,45,46,47,48,49,50,51,53,54,55,56,57,58,61,65,76,79,83,84,91,92,93,94,95,99,100,102,105,108,113,114,],[14,14,14,-7,-9,-10,14,-15,-18,-19,-20,-21,-31,14,-8,14,-55,-56,-57,-40,-43,-45,-46,-47,-48,-49,-50,-14,-46,-16,-17,-32,-33,-29,14,14,-30,-44,-11,-38,-39,-41,-42,-13,14,-34,-36,-12,-52,-35,-37,]),'ID':([4,5,8,9,10,11,14,15,17,18,19,20,23,24,25,26,27,28,29,30,31,32,33,36,38,39,40,41,44,45,46,47,48,49,50,51,53,54,55,56,57,58,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,84,91,92,93,94,95,98,99,100,101,102,103,105,108,109,110,113,114,],[16,16,16,-7,-9,-10,16,-15,-18,-19,-20,-21,-31,37,38,39,40,16,-8,47,47,16,54,47,-55,-56,-57,47,-40,-43,-45,-46,-47,-48,-49,-50,-14,-46,-16,-17,-32,-33,-29,80,16,47,47,47,47,47,47,47,47,47,47,16,47,97,-30,-44,-11,-38,-39,-41,-42,-13,80,16,-34,47,-36,107,-12,-52,47,112,-35,-37,]),'INPUT':([4,5,8,9,10,11,14,15,17,18,19,20,23,28,29,32,33,38,39,40,44,45,46,47,48,49,50,51,53,54,55,56,57,58,61,65,76,79,83,84,91,92,93,94,95,99,100,102,105,108,113,114,],[21,21,21,-7,-9,-10,21,-15,-18,-19,-20,-21,-31,21,-8,21,21,-55,-56,-57,-40,-43,-45,-46,-47,-48,-49,-50,-14,-46,-16,-17,-32,-33,-29,21,21,-30,-44,-11,-38,-39,-41,-42,-13,21,-34,-36,-12,-52,-35,-37,]),'OUTPUT':([4,5,8,9,10,11,14,15,17,18,19,20,23,28,29,32,33,38,39,40,44,45,46,47,48,49,50,51,53,54,55,56,57,58,61,65,76,79,83,84,91,92,93,94,95,99,100,102,105,108,113,114,],[22,22,22,-7,-9,-10,22,-15,-18,-19,-20,-21,-31,22,-8,22,22,-55,-56,-57,-40,-43,-45,-46,-47,-48,-49,-50,-14,-46,-16,-17,-32,-33,-29,22,22,-30,-44,-11,-38,-39,-41,-42,-13,22,-34,-36,-12,-52,-35,-37,]),'CHANNEL':([4,5,8,9,10,11,14,15,17,18,19,20,23,28,29,32,38,39,40,44,45,46,47,48,49,50,51,53,54,55,56,57,58,61,65,76,79,83,84,91,92,93,94,95,99,100,102,105,108,113,114,],[24,24,24,-7,-9,-10,24,-15,-18,-19,-20,-21,-31,24,-8,24,-55,-56,-57,-40,-43,-45,-46,-47,-48,-49,-50,-14,-46,-16,-17,-32,-33,-29,24,24,-30,-44,-11,-38,-39,-41,-42,-13,24,-34,-36,-12,-52,-35,-37,]),'BOOL':([4,5,8,9,10,11,14,15,17,18,19,20,23,28,29,32,38,39,40,44,45,46,47,48,49,50,51,53,54,55,56,57,58,61,65,76,79,83,84,91,92,93,94,95,99,100,102,105,108,113,114,],[25,25,25,-7,-9,-10,25,-15,-18,-19,-20,-21,-31,25,-8,25,-55,-56,-57,-40,-43,-45,-46,-47,-48,-49,-50,-14,-46,-16,-17,-32,-33,-29,25,25,-30,-44,-11,-38,-39,-41,-42,-13,25,-34,-36,-12,-52,-35,-37,]),'STRING':([4,5,8,9,10,11,14,15,17,18,19,20,23,28,29,32,38,39,40,44,45,46,47,48,49,50,51,53,54,55,56,57,58,61,65,76,79,83,84,91,92,93,94,95,99,100,102,105,108,113,114,],[26,26,26,-7,-9,-10,26,-15,-18,-19,-20,-21,-31,26,-8,26,-55,-56,-57,-40,-43,-45,-46,-47,-48,-49,-50,-14,-46,-16,-17,-32,-33,-29,26,26,-30,-44,-11,-38,-39,-41,-42,-13,26,-34,-36,-12,-52,-35,-37,]),'INT':([4,5,8,9,10,11,14,15,17,18,19,20,23,28,29,32,38,39,40,44,45,46,47,48,49,50,51,53,54,55,56,57,58,61,65,76,79,83,84,91,92,93,94,95,99,100,102,105,108,113,114,],[27,27,27,-7,-9,-10,27,-15,-18,-19,-20,-21,-31,27,-8,27,-55,-56,-57,-40,-43,-45,-46,-47,-48,-49,-50,-14,-46,-16,-17,-32,-33,-29,27,27,-30,-44,-11,-38,-39,-41,-42,-13,27,-34,-36,-12,-52,-35,-37,]),'RBRACE':([9,10,11,15,17,18,19,20,23,29,32,38,39,40,44,45,46,47,48,49,50,51,53,54,55,56,57,58,61,79,83,84,91,92,93,94,95,100,102,105,108,113,114,],[-7,-9,-10,-15,-18,-19,-20,-21,-31,-8,53,-55,-56,-57,-40,-43,-45,-46,-47,-48,-49,-50,-14,-46,-16,-17,-32,-33,-29,-30,-44,-11,-38,-39,-41,-42,-13,-34,-36,-12,-52,-35,-37,]),'ELSE':([10,11,15,17,18,19,20,23,38,39,40,44,45,46,47,48,49,50,51,53,54,55,56,57,58,61,79,83,84,91,92,93,94,95,100,102,105,108,113,114,],[-9,-10,-15,-18,-19,-20,-21,-31,-55,-56,-57,-40,-43,-45,-46,-47,-48,-49,-50,-14,-46,-16,-17,-32,-33,-29,-30,-44,99,-38,-39,-41,-42,-13,-34,-36,-12,-52,-35,-37,]),'LPAREN':([12,13,21,22,30,31,33,36,37,41,59,60,66,67,68,69,70,71,72,73,74,75,77,101,109,],[30,31,35,36,41,41,41,41,63,41,77,78,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'ASSIGN':([16,],[33,]),'DOT':([16,54,],[34,34,]),'DIGIT':([30,31,33,36,41,66,67,68,69,70,71,72,73,74,75,77,101,109,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'STRING_VALUE':([30,31,33,36,41,63,66,67,68,69,70,71,72,73,74,75,77,98,101,109,],[48,48,48,48,48,82,48,48,48,48,48,48,48,48,48,48,48,82,48,48,]),'TRUE':([30,31,33,36,41,66,67,68,69,70,71,72,73,74,75,77,101,109,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'FALSE':([30,31,33,36,41,66,67,68,69,70,71,72,73,74,75,77,101,109,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'SEND':([34,],[59,]),'RECEIVE':([34,],[60,]),'RPAREN':([35,42,43,44,45,46,47,48,49,50,51,52,62,64,80,82,83,85,86,87,88,89,90,91,92,93,94,96,97,104,111,112,],[61,65,-28,-40,-43,-45,-46,-47,-48,-49,-50,76,79,83,-53,-54,-44,-22,-23,-24,-25,-26,-27,-38,-39,-41,-42,100,102,108,113,114,]),'LE_THAN':([42,43,44,45,46,47,48,49,50,51,52,83,85,86,87,88,89,90,91,92,93,94,],[66,-28,-40,-43,-45,-46,-47,-48,-49,-50,66,-44,-22,-23,-24,-25,-26,-27,-38,-39,-41,-42,]),'GE_THAN':([42,43,44,45,46,47,48,49,50,51,52,83,85,86,87,88,89,90,91,92,93,94,],[67,-28,-40,-43,-45,-46,-47,-48,-49,-50,67,-44,-22,-23,-24,-25,-26,-27,-38,-39,-41,-42,]),'L_THAN':([42,43,44,45,46,47,48,49,50,51,52,83,85,86,87,88,89,90,91,92,93,94,],[68,-28,-40,-43,-45,-46,-47,-48,-49,-50,68,-44,-22,-23,-24,-25,-26,-27,-38,-39,-41,-42,]),'G_THAN':([42,43,44,45,46,47,48,49,50,51,52,83,85,86,87,88,89,90,91,92,93,94,],[69,-28,-40,-43,-45,-46,-47,-48,-49,-50,69,-44,-22,-23,-24,-25,-26,-27,-38,-39,-41,-42,]),'EQUAL':([42,43,44,45,46,47,48,49,50,51,52,83,85,86,87,88,89,90,91,92,93,94,],[70,-28,-40,-43,-45,-46,-47,-48,-49,-50,70,-44,-22,-23,-24,-25,-26,-27,-38,-39,-41,-42,]),'NOT_EQUAL':([42,43,44,45,46,47,48,49,50,51,52,83,85,86,87,88,89,90,91,92,93,94,],[71,-28,-40,-43,-45,-46,-47,-48,-49,-50,71,-44,-22,-23,-24,-25,-26,-27,-38,-39,-41,-42,]),'PLUS':([43,44,45,46,47,48,49,50,51,54,55,62,64,83,85,86,87,88,89,90,91,92,93,94,96,106,111,],[72,-40,-43,-45,-46,-47,-48,-49,-50,-46,72,72,72,-44,72,72,72,72,72,72,-38,-39,-41,-42,72,72,72,]),'MINUS':([43,44,45,46,47,48,49,50,51,54,55,62,64,83,85,86,87,88,89,90,91,92,93,94,96,106,111,],[73,-40,-43,-45,-46,-47,-48,-49,-50,-46,73,73,73,-44,73,73,73,73,73,73,-38,-39,-41,-42,73,73,73,]),'COMMA':([44,45,46,47,48,49,50,51,80,81,82,83,91,92,93,94,96,97,106,107,],[-40,-43,-45,-46,-47,-48,-49,-50,-53,98,-54,-44,-38,-39,-41,-42,101,103,109,110,]),'TIMES':([44,45,46,47,48,49,50,51,54,83,91,92,93,94,],[74,-43,-45,-46,-47,-48,-49,-50,-46,-44,74,74,-41,-42,]),'DIVIDE':([44,45,46,47,48,49,50,51,54,83,91,92,93,94,],[75,-43,-45,-46,-47,-48,-49,-50,-46,-44,75,75,-41,-42,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'stmt_block':([0,],[1,]),'seq_stmts':([0,1,],[2,6,]),'par_stmts':([0,1,],[3,7,]),'stmts':([4,5,14,],[8,28,32,]),'stmt':([4,5,8,14,28,32,65,76,99,],[9,9,29,9,29,29,84,95,105,]),'assignment':([4,5,8,14,28,32,65,76,99,],[10,10,10,10,10,10,10,10,10,]),'declaration':([4,5,8,14,28,32,65,76,99,],[11,11,11,11,11,11,11,11,11,]),'func':([4,5,8,14,28,32,33,65,76,99,],[15,15,15,15,15,15,56,15,15,15,]),'c_channel':([4,5,8,14,28,32,65,76,99,],[17,17,17,17,17,17,17,17,17,]),'b_declaration':([4,5,8,14,28,32,65,76,99,],[18,18,18,18,18,18,18,18,18,]),'s_declaration':([4,5,8,14,28,32,65,76,99,],[19,19,19,19,19,19,19,19,19,]),'i_declaration':([4,5,8,14,28,32,65,76,99,],[20,20,20,20,20,20,20,20,20,]),'chan':([4,5,8,14,28,32,33,65,76,99,],[23,23,23,23,23,23,23,23,23,23,]),'condition':([30,31,],[42,52,]),'expr':([30,31,33,36,41,66,67,68,69,70,71,77,101,109,],[43,43,55,62,64,85,86,87,88,89,90,96,106,111,]),'term':([30,31,33,36,41,66,67,68,69,70,71,72,73,77,101,109,],[44,44,44,44,44,44,44,44,44,44,44,91,92,44,44,44,]),'factor':([30,31,33,36,41,66,67,68,69,70,71,72,73,74,75,77,101,109,],[45,45,45,45,45,45,45,45,45,45,45,45,45,93,94,45,45,45,]),'bool_val':([30,31,33,36,41,66,67,68,69,70,71,72,73,74,75,77,101,109,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'send_stmt':([34,],[57,]),'receive_stmt':([34,],[58,]),'address':([63,98,],[81,104,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> stmt_block","S'",1,None,None,None),
  ('stmt_block -> seq_stmts','stmt_block',1,'p_stmt_block','parser.py',32),
  ('stmt_block -> par_stmts','stmt_block',1,'p_stmt_block','parser.py',33),
  ('stmt_block -> stmt_block seq_stmts','stmt_block',2,'p_stmt_block','parser.py',34),
  ('stmt_block -> stmt_block par_stmts','stmt_block',2,'p_stmt_block','parser.py',35),
  ('seq_stmts -> SEQ_BLOCK stmts','seq_stmts',2,'p_seq_stmts','parser.py',42),
  ('par_stmts -> PAR_BLOCK stmts','par_stmts',2,'p_par_block','parser.py',46),
  ('stmts -> stmt','stmts',1,'p_stmts','parser.py',50),
  ('stmts -> stmts stmt','stmts',2,'p_stmts','parser.py',51),
  ('stmt -> assignment','stmt',1,'p_stmt','parser.py',59),
  ('stmt -> declaration','stmt',1,'p_stmt','parser.py',60),
  ('stmt -> IF LPAREN condition RPAREN stmt','stmt',5,'p_stmt','parser.py',61),
  ('stmt -> IF LPAREN condition RPAREN stmt ELSE stmt','stmt',7,'p_stmt','parser.py',62),
  ('stmt -> WHILE LPAREN condition RPAREN stmt','stmt',5,'p_stmt','parser.py',63),
  ('stmt -> LBRACE stmts RBRACE','stmt',3,'p_stmt','parser.py',64),
  ('stmt -> func','stmt',1,'p_stmt','parser.py',65),
  ('assignment -> ID ASSIGN expr','assignment',3,'p_assignment','parser.py',80),
  ('assignment -> ID ASSIGN func','assignment',3,'p_assignment','parser.py',81),
  ('declaration -> c_channel','declaration',1,'p_declaration','parser.py',85),
  ('declaration -> b_declaration','declaration',1,'p_declaration','parser.py',86),
  ('declaration -> s_declaration','declaration',1,'p_declaration','parser.py',87),
  ('declaration -> i_declaration','declaration',1,'p_declaration','parser.py',88),
  ('condition -> condition LE_THAN expr','condition',3,'p_condition','parser.py',92),
  ('condition -> condition GE_THAN expr','condition',3,'p_condition','parser.py',93),
  ('condition -> condition L_THAN expr','condition',3,'p_condition','parser.py',94),
  ('condition -> condition G_THAN expr','condition',3,'p_condition','parser.py',95),
  ('condition -> condition EQUAL expr','condition',3,'p_condition','parser.py',96),
  ('condition -> condition NOT_EQUAL expr','condition',3,'p_condition','parser.py',97),
  ('condition -> expr','condition',1,'p_condition','parser.py',98),
  ('func -> INPUT LPAREN RPAREN','func',3,'p_func','parser.py',105),
  ('func -> OUTPUT LPAREN expr RPAREN','func',4,'p_func','parser.py',106),
  ('func -> chan','func',1,'p_func','parser.py',107),
  ('chan -> ID DOT send_stmt','chan',3,'p_chan','parser.py',114),
  ('chan -> ID DOT receive_stmt','chan',3,'p_chan','parser.py',115),
  ('send_stmt -> SEND LPAREN expr RPAREN','send_stmt',4,'p_send_stmt','parser.py',122),
  ('send_stmt -> SEND LPAREN expr COMMA expr COMMA expr RPAREN','send_stmt',8,'p_send_stmt','parser.py',123),
  ('receive_stmt -> RECEIVE LPAREN ID RPAREN','receive_stmt',4,'p_receive_stmt','parser.py',130),
  ('receive_stmt -> RECEIVE LPAREN ID COMMA ID COMMA ID RPAREN','receive_stmt',8,'p_receive_stmt','parser.py',131),
  ('expr -> expr PLUS term','expr',3,'p_expr','parser.py',140),
  ('expr -> expr MINUS term','expr',3,'p_expr','parser.py',141),
  ('expr -> term','expr',1,'p_expr','parser.py',142),
  ('term -> term TIMES factor','term',3,'p_term','parser.py',150),
  ('term -> term DIVIDE factor','term',3,'p_term','parser.py',151),
  ('term -> factor','term',1,'p_term','parser.py',152),
  ('factor -> LPAREN expr RPAREN','factor',3,'p_factor','parser.py',159),
  ('factor -> DIGIT','factor',1,'p_factor','parser.py',160),
  ('factor -> ID','factor',1,'p_factor','parser.py',161),
  ('factor -> STRING_VALUE','factor',1,'p_factor','parser.py',162),
  ('factor -> bool_val','factor',1,'p_factor','parser.py',163),
  ('bool_val -> TRUE','bool_val',1,'p_bool_val','parser.py',179),
  ('bool_val -> FALSE','bool_val',1,'p_bool_val','parser.py',180),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',184),
  ('c_channel -> CHANNEL ID LPAREN address COMMA address RPAREN','c_channel',7,'p_c_channel','parser.py',188),
  ('address -> ID','address',1,'p_address','parser.py',193),
  ('address -> STRING_VALUE','address',1,'p_address','parser.py',194),
  ('b_declaration -> BOOL ID','b_declaration',2,'p_b_declaration','parser.py',198),
  ('s_declaration -> STRING ID','s_declaration',2,'p_s_declaration','parser.py',202),
  ('i_declaration -> INT ID','i_declaration',2,'p_i_declaration','parser.py',206),
]
